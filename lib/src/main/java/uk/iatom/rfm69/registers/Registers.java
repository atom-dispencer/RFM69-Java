package uk.iatom.rfm69.registers; import uk.iatom.rfm69.IRegisterValue;

public enum Registers implements IRegisterValue {
    FIFO(0x00),
    OPMODE(0x01),
    DATAMODUL(0x02),
    BITRATEMSB(0x03),
    BITRATELSB(0x04),
    FDEVMSB(0x05),
    FDEVLSB(0x06),
    FRFMSB(0x07),
    FRFMID(0x08),
    FRFLSB(0x09),
    OSC1(0x0A),
    AFCCTRL(0x0B),
    LOWBAT(0x0C),
    LISTEN1(0x0D),
    LISTEN2(0x0E),
    LISTEN3(0x0F),
    VERSION(0x10),
    PALEVEL(0x11),
    PARAMP(0x12),
    OCP(0x13),
    AGCREF(0x14), // not present on RFM69/SX1231),
    AGCTHRESH1(0x15), // not present on RFM69/SX1231),
    AGCTHRESH2(0x16), // not present on RFM69/SX1231),
    AGCTHRESH3(0x17), // not present on RFM69/SX1231),
    LNA(0x18),
    RXBW(0x19),
    AFCBW(0x1A),
    OOKPEAK(0x1B),
    OOKAVG(0x1C),
    OOKFIX(0x1D),
    AFCFEI(0x1E),
    AFCMSB(0x1F),
    AFCLSB(0x20),
    FEIMSB(0x21),
    FEILSB(0x22),
    RSSICONFIG(0x23),
    RSSIVALUE(0x24),
    DIOMAPPING1(0x25),
    DIOMAPPING2(0x26),
    IRQFLAGS1(0x27),
    IRQFLAGS2(0x28),
    RSSITHRESH(0x29),
    RXTIMEOUT1(0x2A),
    RXTIMEOUT2(0x2B),
    PREAMBLEMSB(0x2C),
    PREAMBLELSB(0x2D),
    SYNCCONFIG(0x2E),
    SYNCVALUE1(0x2F),
    SYNCVALUE2(0x30),
    SYNCVALUE3(0x31),
    SYNCVALUE4(0x32),
    SYNCVALUE5(0x33),
    SYNCVALUE6(0x34),
    SYNCVALUE7(0x35),
    SYNCVALUE8(0x36),
    PACKETCONFIG1(0x37),
    PAYLOADLENGTH(0x38),
    NODEADRS(0x39),
    BROADCASTADRS(0x3A),
    AUTOMODES(0x3B),
    FIFOTHRESH(0x3C),
    PACKETCONFIG2(0x3D),
    AESKEY1(0x3E),
    AESKEY2(0x3F),
    AESKEY3(0x40),
    AESKEY4(0x41),
    AESKEY5(0x42),
    AESKEY6(0x43),
    AESKEY7(0x44),
    AESKEY8(0x45),
    AESKEY9(0x46),
    AESKEY10(0x47),
    AESKEY11(0x48),
    AESKEY12(0x49),
    AESKEY13(0x4A),
    AESKEY14(0x4B),
    AESKEY15(0x4C),
    AESKEY16(0x4D),
    TEMP1(0x4E),
    TEMP2(0x4F),
    TESTLNA(0x58),
    TESTPA1(0x5A), // only present on RFM69HW/SX1231H),
    TESTPA2(0x5C), // only present on RFM69HW/SX1231H),
    TESTDAGC(0x6F);

    private byte address;
    
    Registers(int address) {
        this.address = (byte) address;
    }

    public byte getAddress() {
        return address;
    }
}
